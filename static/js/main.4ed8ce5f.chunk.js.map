{"version":3,"sources":["components/Cart/Cart.module.css","components/Cart/CartItem.module.css","components/Layout/HeaderCartButton.module.css","components/Meals/MealItem/MealItem.module.css","components/UI/Modal.module.css","components/Layout/Header.module.css","components/Meals/MealsSummary.module.css","components/UI/Card.module.css","components/UI/Input.module.css","components/Meals/MealItem/MealItemForm.module.css","components/Meals/AvailableMeals.module.css","assets/meals.jpeg","components/Cart/CartIcon.js","store/cart-context.js","components/Layout/HeaderCartButton.js","components/Layout/Header.js","components/Meals/MealsSummary.js","components/UI/Card.js","components/UI/Input.js","components/Meals/MealItem/MealItemForm.js","components/Meals/MealItem/MealItem.js","components/Meals/AvailableMeals.js","components/Meals/Meals.js","components/UI/Modal.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/CartProvider.js","App.js","index.js"],"names":["module","exports","CartIcon","xmlns","viewBox","fill","d","CartContext","React","createContext","items","totalAmount","addItem","item","removeItem","id","HeaderCartButton","props","useState","btnIsHighlighted","setBtnIsHighlighted","useContext","numberOfCartItems","reduce","acc","amount","btnClasses","classes","button","bump","useEffect","length","timer","setTimeout","clearTimeout","className","onClick","icon","badge","Header","header","onShowCart","src","mealsImage","alt","MealsSummary","summary","Card","card","children","Input","forwardRef","ref","input","htmlFor","label","type","MealItemForm","amountIsValid","setAmountIsValid","amountInputRef","useRef","action","form","onSubmit","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","onAddToCart","min","max","step","defaultValue","MealItem","cartCtx","price","toFixed","meal","name","description","DUMMY_MEALS","AvailableMeals","mealsList","map","meals","Meals","Backdrop","backdrop","onClose","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDom","createPortal","CartItem","actions","onRemove","onAdd","Cart","hasItems","cartItemRemoveHandler","cartItemAddHandler","cartItems","bind","total","defaultCartState","cartReducer","state","updatedItems","existingCartItemIndex","findIndex","payload","existingCartItem","updatedItem","concat","existingItem","updatedTotalAmount","filter","UpdatedItem","CartProvider","useReducer","cartState","dispatchCartAction","cartContext","Provider","App","cartIsShown","setCartIsShown","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.4ed8ce5f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__2pjQw\",\"total\":\"Cart_total__3pLin\",\"actions\":\"Cart_actions__1GOmr\",\"button--alt\":\"Cart_button--alt__1Z2QQ\",\"button\":\"Cart_button__fw1-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1B1_q\",\"summary\":\"CartItem_summary__3FMDj\",\"price\":\"CartItem_price__2Nl0j\",\"amount\":\"CartItem_amount__jUKEC\",\"actions\":\"CartItem_actions__UwVPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3CMOT\",\"icon\":\"HeaderCartButton_icon__9KWtg\",\"badge\":\"HeaderCartButton_badge__1Z3gL\",\"bump\":\"HeaderCartButton_bump__3atD4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meal\":\"MealItem_meal__2uJ70\",\"description\":\"MealItem_description__2YINS\",\"price\":\"MealItem_price__3sNYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1mfF6\",\"modal\":\"Modal_modal__4DXUe\",\"slide-down\":\"Modal_slide-down__W3MdX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__zSTUo\",\"main-image\":\"Header_main-image__2Q3So\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"MealsSummary_summary__22zUX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2swPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MealItemForm_form__32qVd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"AvailableMeals_meals__2ZLCP\",\"meals-appear\":\"AvailableMeals_meals-appear__ONwLi\"};","export default __webpack_public_path__ + \"static/media/meals.2971f633.jpeg\";","const CartIcon = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 20 20\"\n      fill=\"currentColor\"\n    >\n      <path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\" />\n    </svg>\n  );\n};\n\nexport default CartIcon;\n","import React from \"react\";\n\nconst CartContext = React.createContext({\n  items: [],\n  totalAmount: 0,\n  addItem: (item) => {},\n  removeItem: (id) => {},\n});\n\nexport default CartContext;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport CartIcon from \"../Cart/CartIcon\";\nimport classes from \"./HeaderCartButton.module.css\";\nimport CartContext from \"../../store/cart-context\";\n\nconst HeaderCartButton = (props) => {\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\n  const cartCtx = useContext(CartContext);\n\n  // cartCtx'den items'ı destructre ediyoruz. Bunu useEffect dependency olarak kullanacağız.\n  // Yani context'deki items değiştiğinde animasyon çalıştıracağız.\n  const { items } = cartCtx;\n\n  // header'da bulunan sepetteki ürün sayısı; 3 farklı ürün olabilir ama toplam ürün müktarı her üründen 3 adet alındı ise 9 olacak.\n  // sepette kaç ürün olduğunu göstermek için. Aksi halde sepetteki ürün sayısıo 3 yerine 9 olur. bu logic henüz yazılmadı.\n  const numberOfCartItems = items.reduce((acc, item) => {\n    return acc + item.amount;\n  }, 0);\n\n  // cart butonunun css durumunu ayaladık. cart'a ürün eklemede buton için animasyon çalışır.\n  // Bu durumu btnIsHighlighted state'i ile kontrol ediyoruz.\n  const btnClasses = `${classes.button} ${\n    btnIsHighlighted ? classes.bump : \" \"\n  }`;\n\n  useEffect(() => {\n    //\n    if (items.length === 0) {\n      return;\n    }\n    setBtnIsHighlighted(true);\n    const timer = setTimeout(() => {\n      // 300ms saniye sonra butonun animasyonu kaldırılır. Aksi halde animasyon bir defa çalışır.\n      // Çünkü eklenen animasyon state'i sürekli kalır.\n      setBtnIsHighlighted(false);\n    }, 300);\n    //buradaki cleanup hızlı eklemede effect'İn çalışmasını durdurur.\n    return () => clearTimeout(timer);\n  }, [items]);\n\n  return (\n    <button className={btnClasses} onClick={props.onClick}>\n      <span className={classes.icon}>\n        <CartIcon />\n      </span>\n      <span>Your Cart</span>\n      <span className={classes.badge}>{numberOfCartItems}</span>\n    </button>\n  );\n};\n\nexport default HeaderCartButton;\n","import React from \"react\";\nimport mealsImage from \"../../assets/meals.jpeg\";\nimport classes from \"./Header.module.css\";\nimport HeaderCartButton from \"./HeaderCartButton\";\n\nconst Header = (props) => {\n  return (\n    <>\n      <header className={classes.header}>\n        <h1>ReactMeals</h1>\n        <HeaderCartButton onClick={props.onShowCart} />\n      </header>\n      <div className={classes[\"main-image\"]}>\n        <img src={mealsImage} alt=\"ReactMeals\" />\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport classes from \"./MealsSummary.module.css\";\n\nconst MealsSummary = () => {\n  return (\n    <section className={classes.summary}>\n      <h2>Delicious Food, Delivered To You</h2>\n      <p>\n        Choose your favorite meal from our broad selection of available meals\n        and enjoy a delicious lunch or dinner at home.\n      </p>\n      <p>\n        All our meals are cooked with high-quality ingredients, just-in-time and\n        of course by experienced chefs!\n      </p>\n    </section>\n  );\n};\n\nexport default MealsSummary;\n","import React from \"react\";\nimport classes from \"./Card.module.css\";\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\nimport classes from \"./Input.module.css\";\n\n// props olarak gönderdiğimiz ref'i burada argument olarak kullanıyoruz. Amaç asıl input elementine ulaşmak.\nconst Input = React.forwardRef((props, ref) => {\n  return (\n    <div className={classes.input}>\n      <label htmlFor={props.input.id}>{props.label}</label>\n      <input ref={ref} {...props.input} />\n      <p>{props.input.type}</p>\n    </div>\n  );\n});\n\nexport default Input;\n","import React, { useRef, useState } from \"react\";\nimport Input from \"../../UI/Input\";\nimport classes from \"./MealItemForm.module.css\";\n\nconst MealItemForm = (props) => {\n  const [amountIsValid, setAmountIsValid] = useState(true);\n  const amountInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredAmount = amountInputRef.current.value;\n    //input'tan her zaman string olarak geliyor. number'a çevirdik.\n    const enteredAmountNumber = +enteredAmount;\n    if (\n      enteredAmount.trim().length === 0 ||\n      enteredAmountNumber < 1 ||\n      enteredAmountNumber > 3\n    ) {\n      setAmountIsValid(false);\n      return;\n    }\n    // props'tan gelen onAddToCart'a enteredAmountNumber'ı verdik. context'i burada kullanamayız. Çünkü burada\n    // meal item'in yalnız amount'u var ama bize id ve price gibi değerler de gerekiyor. Biz amount değerini\n    // bir üst component'e göndermek istiyoruz. Diğer bilgiler üst component olan MealItem'da.\n    props.onAddToCart(enteredAmountNumber);\n  };\n\n  return (\n    <form action=\"\" className={classes.form} onSubmit={submitHandler}>\n      <Input\n        //custom component olduğun için amountInputRef'i props olarak gönderdik. asıl input elementi bu değil.\n        ref={amountInputRef}\n        label=\"Amount\"\n        input={{\n          id: \"amount\" + props.id,\n          type: \"number\",\n          min: \"1\",\n          max: \"5\",\n          step: \"1\",\n          defaultValue: \"1\",\n        }}\n      />\n      <button>+ Add</button>\n      {!amountIsValid && <p>Amount must be between 1 and 5</p>}\n    </form>\n  );\n};\n\nexport default MealItemForm;\n","import React, { useContext } from \"react\";\nimport classes from \"./MealItem.module.css\";\nimport MealItemForm from \"./MealItemForm\";\nimport CartContext from \"../../../store/cart-context\";\n\nconst MealItem = (props) => {\n  //CartContext'e bağlantı yapıyoruz.\n  const cartCtx = useContext(CartContext);\n  const price = `$${props.price.toFixed(2)}`;\n\n  const addToCartHandler = (amount) => {\n    //CartContext'deki addItem'a gönderiyoruz. id, name ve price bir üst component olan AvailabeMeals'den geliyor.\n    // amount ise alt component olan MealItemForm'den geliyor.\n    cartCtx.addItem({\n      id: props.id,\n      name: props.name,\n      price: props.price,\n      amount: amount,\n    });\n  };\n  return (\n    <li className={classes.meal}>\n      <div>\n        <h3>{props.name}</h3>\n        <div className={classes.description}>{props.description}</div>\n        <div className={classes.price}>{price}</div>\n      </div>\n      <div>\n        <MealItemForm id={props.id} onAddToCart={addToCartHandler} />\n      </div>\n    </li>\n  );\n};\n\nexport default MealItem;\n","import React from \"react\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nconst DUMMY_MEALS = [\n  {\n    id: \"m1\",\n    name: \"Sushi\",\n    description: \"Finest fish and veggies\",\n    price: 22.99,\n  },\n  {\n    id: \"m2\",\n    name: \"Schnitzel\",\n    description: \"A german specialty!\",\n    price: 16.5,\n  },\n  {\n    id: \"m3\",\n    name: \"Barbecue Burger\",\n    description: \"American, raw, meaty\",\n    price: 12.99,\n  },\n  {\n    id: \"m4\",\n    name: \"Green Bowl\",\n    description: \"Healthy...and green...\",\n    price: 18.99,\n  },\n];\n\nconst AvailableMeals = () => {\n  const mealsList = DUMMY_MEALS.map((meal) => (\n    <MealItem\n      id={meal.id}\n      key={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n","import React from \"react\";\nimport MealsSummary from \"./MealsSummary\";\nimport AvailableMeals from \"./AvailableMeals\";\n\nconst Meals = () => {\n  return (\n    <>\n      <MealsSummary />\n      <AvailableMeals />\n    </>\n  );\n};\n\nexport default Meals;\n","import React from \"react\";\nimport classes from \"./Modal.module.css\";\nimport ReactDom from \"react-dom\";\n\nconst Backdrop = (props) => {\n  return <div className={classes.backdrop} onClick={props.onClose}></div>;\n};\n\nconst ModalOverlay = (props) => {\n  return (\n    <div className={classes.modal}>\n      <div className={classes.content}>{props.children}</div>\n    </div>\n  );\n};\n\nconst portalElement = document.getElementById(\"overlays\");\n\nconst Modal = (props) => {\n  return (\n    <>\n      {ReactDom.createPortal(\n        <Backdrop onClose={props.onClose} />,\n        portalElement\n      )}\n      {ReactDom.createPortal(\n        <ModalOverlay>{props.children}</ModalOverlay>,\n        portalElement\n      )}\n    </>\n  );\n};\n\nexport default Modal;\n","import classes from \"./CartItem.module.css\";\n\nconst CartItem = (props) => {\n  const price = `$${props.price.toFixed(2)}`;\n\n  return (\n    <li className={classes[\"cart-item\"]}>\n      <div>\n        <h2>{props.name}</h2>\n        <div className={classes.summary}>\n          <span className={classes.price}>{price}</span>\n          <span className={classes.amount}>x {props.amount}</span>\n        </div>\n      </div>\n      <div className={classes.actions}>\n        <button onClick={props.onRemove}>−</button>\n        <button onClick={props.onAdd}>+</button>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import React, { useContext } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\n\nconst Cart = (props) => {\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.removeItem(id);\n  };\n  const cartItemAddHandler = (item) => {\n    cartCtx.addItem({ ...item, amount: 1 });\n  };\n  const cartItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          //onRemove={() => cartItemRemoveHandler(item.id)}\n          //onAdd={() => cartItemAddHandler(item)} veya;\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n  return (\n    <Modal onClose={props.onClose}>\n      {cartItems}\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span>{totalAmount}</span>\n      </div>\n      <div className={classes.actions}>\n        <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n          Close\n        </button>\n        {hasItems && <button className={classes.button}>Order</button>}\n      </div>\n    </Modal>\n  );\n};\n\nexport default Cart;\n","import { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n// reducer: It takes two arguments, the current state and the action object, and it returns the next state:\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    //state.items array'i ile action.payload array'i birleştiriyoruz. ADD için action.payload item'ı içeriyor.\n    // burada oluşan updatedItems item objelerini tutan bir array. [{id: 'm1', name: 'Sushi', price: 22.99, amount: 1},\n    // id: 'm2', name: 'Schnitzel', price: 16.5, amount: 1},\n    // {id: 'm1', name: 'Sushi', price: 22.99, amount: 1}]\n\n    //action payload ile gelen item'in id'sini kullanarak state.items array'inde index'ini buluyoruz.\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.payload.id\n    );\n\n    // index sayesinde mevcut state'de yer alan ve tekrar gelen item'ı buluyoruz.\n    const existingCartItem = state.items[existingCartItemIndex];\n\n    let updatedItems;\n\n    // eğer aynı item mevcutsa\n    if (existingCartItem) {\n      // state'de yer alan item'ın amount'ını arttırıp geri kalan propertilerini muhafaza ediyoruz.\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.payload.amount,\n      };\n      // mevcut items'ın kopyasını oluşturuyoruz. Bu immutablility'i sağlıyor.\n      updatedItems = [...state.items];\n      // aynı item'ı yeni gelen ile override ediyoruz.\n      updatedItems[existingCartItemIndex] = updatedItem;\n      // eğer action payload'dan gelen yeni bir item ise\n    } else {\n      // yeni item'ı state'deki items'a ekliyoruz.\n      updatedItems = state.items.concat(action.payload);\n    }\n\n    // her item gönderildiğinde updatedTotalAmount, context'te tutulan state.totalAmount'a eklenerek tekrar hesaplanır.\n    // state.totalAmount initial olarak 0. Her item eklendiğinde bir önceki totalAmount'a eklenir ve bu değer\n    // state'de saklanır. Bir sonraki item gönderildiğinde state'de saklanan son değer ile tekrar toplanır.\n    const updatedTotalAmount =\n      state.totalAmount + action.payload.price * action.payload.amount;\n    //reducer mevcut state'i aldı ve aşağıda yeni state'i döndü.\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    //action.payload(id) ile gelen item'ın index'ini buluyoruz.\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.payload\n    );\n    // mevcut state'de existingItem'ı buluyoruz.\n    const existingItem = state.items[existingCartItemIndex];\n    // mevcut state'in total amount'ını güncelliyoruz.\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n\n    let updatedItems;\n    // eğer sepette aynı üründen 1 tane varsa ürünü state'den kaldırıyoruz. Bu sayede bu üründen context'te kalmıyorç\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter((item) => item.id !== action.payload);\n      // eğer gelen item sepette 1'den fazla varsa\n    } else {\n      //öncelikle mevcut item'ın amount'ını 1 azaltıyoruz.\n      const UpdatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n      // mevcut items'ın kopyasını oluşturuyoruz. Bu immutablility'i sağlıyor.\n      updatedItems = [...state.items];\n      // aynı item'ı yeni gelen ile override ediyoruz. Bu sayede 1 tane azalmış olarak context'de tutuyoruz.\n      // 1 tane kalınca ve tekrar remove gelirse if durumuna girer ve item context'ten kaldırılır.\n      updatedItems[existingCartItemIndex] = UpdatedItem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  //initial state'i default olarak dön.\n  return defaultCartState;\n};\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    //action\n    dispatchCartAction({\n      type: \"ADD\",\n      payload: item,\n    });\n  };\n  const removeItemFromCartHandler = (id) => {\n    //action\n    dispatchCartAction({\n      type: \"REMOVE\",\n      payload: id,\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n","import { useState } from \"react\";\nimport Header from \"./components/Layout/Header\";\nimport Meals from \"./components/Meals/Meals\";\nimport Cart from \"./components/Cart/Cart\";\nimport CartProvider from \"./store/CartProvider\";\nconst App = () => {\n  const [cartIsShown, setCartIsShown] = useState(false);\n\n  const showCartHandler = () => {\n    setCartIsShown(true);\n  };\n\n  const hideCartHandler = () => {\n    setCartIsShown(false);\n  };\n  return (\n    <CartProvider>\n      {cartIsShown && <Cart onClose={hideCartHandler} />}\n      <Header onShowCart={showCartHandler} />\n      <main>\n        <Meals />\n      </main>\n    </CartProvider>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}